# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Deploy Plant Catalog

on:
 push:
    branches: 
      - main
    paths:
      - "src/PlantCatalog/**"
 pull_request:
     branches: 
       - main
     paths:
      - "src/PlantCatalog/**"
 workflow_dispatch:
  
jobs:
  setup:
    runs-on: ubuntu-latest
    
    outputs:
      test-mongodb-server: ${{steps.retrieve_secrets.outputs.test-mongodb-server}}
      test-mongodb-databasename: ${{steps.retrieve_secrets.outputs.test-mongodb-databasename}}
      test-mongodb-username: ${{steps.retrieve_secrets.outputs.test-mongodb-username}}
      test-mongodb-password: ${{steps.retrieve_secrets.outputs.test-mongodb-password}}
      auth0-clientsecret: ${{steps.retrieve_secrets.outputs.auth0-clientsecret}}
      registry-server: ${{steps.retrieve_secrets.outputs.registry-server}}
      test-registry-username: ${{steps.retrieve_secrets.outputs.test-registry-username}}
      test-registry-password: ${{steps.retrieve_secrets.outputs.test-registry-password}}
      
    steps: 
    - uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - id: retrieve_secrets
      name: Retrieve secret from KV
      uses: azure/CLI@v1
      with:
        inlineScript: |
            echo test-mongodb-server=$(az keyvault secret show --name "test-mongodb-server" --vault-name "gardenlogvault" --query "value" -o tsv) >> $GITHUB_OUTPUT
            echo test-mongodb-databasename=$(az keyvault secret show --name "test-mongodb-databasename" --vault-name "gardenlogvault" --query "value" -o tsv) >> $GITHUB_OUTPUT
            echo test-mongodb-username=$(az keyvault secret show --name "test-mongodb-username" --vault-name "gardenlogvault" --query "value" -o tsv) >> $GITHUB_OUTPUT
            echo test-mongodb-password=$(az keyvault secret show --name "test-mongodb-password" --vault-name "gardenlogvault" --query "value" -o tsv) >> $GITHUB_OUTPUT
            echo auth0-clientsecret=$(az keyvault secret show --name "auth0-clientsecret" --vault-name "gardenlogvault" --query "value" -o tsv) >> $GITHUB_OUTPUT
            echo registry-server=$(az keyvault secret show --name "registry-server" --vault-name "gardenlogvault" --query "value" -o tsv) >> $GITHUB_OUTPUT
            echo registry-username=$(az keyvault secret show --name "registry-username" --vault-name "gardenlogvault" --query "value" -o tsv) >> $GITHUB_OUTPUT
            echo registry-password=$(az keyvault secret show --name "registry-password" --vault-name "gardenlogvault" --query "value" -o tsv) >> $GITHUB_OUTPUT
  build:
    
    env:
      mongodb-server: ${{needs.setup.outputs.test-mongodb-server}}
      mongodb-databasename: ${{needs.setup.outputs.test-mongodb-databasename}}
      mongodb-username: ${{needs.setup.outputs.test-mongodb-username}}
      mongodb-password: ${{needs.setup.outputs.test-mongodb-password}}
      auth0-clientsecret: ${{needs.setup.outputs.auth0-clientsecret}}
      ASPNETCORE_ENVIRONMENT: "Test"      
      PROJECT_NAME_FOR_DOCKER: plantcatalogapi
      DOCKER_FILE_PATH: src/PlantCatalog/PlantCatalog.Api/Dockerfile
      
    needs: setup
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Test
      run: dotnet test --logger "console;verbosity=normal" --no-build --verbosity normal
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to container registry
      uses: docker/login-action@v3.0.0
      with:
        registry: ${{needs.setup.outputs.registry-server}}.azurecr.io
        username: ${{needs.setup.outputs.registry-username}}
        password: ${{needs.setup.outputs.registry-password}}
    
    - name: Build and push container image to registry
      uses: docker/build-push-action@v5.1.0
      with:
        push: true
        tags: ${{needs.setup.outputs.registry-server}}.azurecr.io/${{ env.PROJECT_NAME_FOR_DOCKER }}:${{ github.sha }}
        file: ${{ env.DOCKER_FILE_PATH }}
    
